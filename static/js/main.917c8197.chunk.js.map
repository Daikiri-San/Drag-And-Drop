{"version":3,"sources":["initialData.js","components/task.jsx","components/InnerList.js","components/column.jsx","components/InnerListForApp.js","components/App.js","index.js"],"names":["initialDAta","tasks","id","content","columns","title","taskIds","columnOrder","Container","styled","div","props","isDragging","Task","this","task","index","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","aria-roledescription","Component","InnnerList","nextProps","map","key","Title","h3","TaskList","isDraggingOver","Column","column","droppableId","type","droppableProps","placeholder","InnerListFroApp","taskMap","taskId","App","state","initialData","onDragStart","start","announce","source","onDragUpdate","update","message","destination","onDragEnd","result","finish","startTaskIds","splice","newStart","finishTaskIds","newFinish","newState","setState","newTaskIds","newColumn","newColumnOrder","direction","columnId","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.917c8197.chunk.js","sourcesContent":["const initialDAta = {\r\n  tasks: {\r\n    'task-1': { id: 'task-1', content: 'Take out the garbage' },\r\n    'task-2': { id: 'task-2', content: 'Watch my favorite show' },\r\n    'task-3': { id: 'task-3', content: 'Charge my phone' },\r\n    'task-4': { id: 'task-4', content: 'Cook dinner' },\r\n  },\r\n  columns: {\r\n    'column-1': {\r\n      id: 'column-1',\r\n      title: 'To do',\r\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\r\n    },\r\n    'column-2': {\r\n      id: 'column-2',\r\n      title: 'In progress',\r\n      taskIds: [],\r\n    },\r\n    'column-3': {\r\n      id: 'column-3',\r\n      title: 'Done',\r\n      taskIds: [],\r\n    },\r\n  },\r\n  columnOrder: ['column-1', 'column-2', 'column-3'],\r\n};\r\n\r\nexport default initialDAta;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  border: 0.2rem solid tomato;\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  background-color: ${props => (props.isDragging ? '#b50000' : '#333333')};\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport default class Task extends Component {\r\n  render() {\r\n    const { task, index } = this.props;\r\n    return (\r\n      <Draggable draggableId={task.id} index={index}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            aria-roledescription=\"Press space bar to lift the task\"\r\n          >\r\n            {task.content}\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Task from './task';\r\n\r\nexport default class InnnerList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const { tasks } = this.props;\r\n    if (nextProps.tasks === tasks) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { tasks } = this.props;\r\n    return tasks.map((task, index) => (\r\n      <Task key={task.id} task={task} index={index} />\r\n    ));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport InnerList from './InnerList';\r\n\r\nconst Container = styled.div`\r\n  margin: 1rem;\r\n  border: 0.2rem solid tomato;\r\n  border-radius: 0.5rem;\r\n  background-color: #333333;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  font-weight: 500;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  background-color: ${props => (props.isDraggingOver ? '#ff0022' : 'inherit')};\r\n  transition: background-color 0.2s ease;\r\n  flex-grow: 1;\r\n  min-width: 28rem;\r\n  min-height: 12rem;\r\n`;\r\n\r\nexport default class Column extends Component {\r\n  render() {\r\n    const { column, tasks, index } = this.props;\r\n    return (\r\n      <Draggable draggableId={column.id} index={index}>\r\n        {({ draggableProps, dragHandleProps, innerRef }) => (\r\n          <Container {...draggableProps} ref={innerRef}>\r\n            <Title {...dragHandleProps}>{column.title}</Title>\r\n            <Droppable droppableId={column.id} type=\"task\">\r\n              {(provided, snapshot) => (\r\n                <TaskList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList tasks={tasks} />\r\n                  {provided.placeholder}\r\n                </TaskList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Column from './column';\r\n\r\nexport default class InnerListFroApp extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const { column, taskMap, index } = this.props;\r\n    if (\r\n      nextProps.column === column &&\r\n      nextProps.taskMap === taskMap &&\r\n      nextProps.index === index\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    const { column, taskMap, index } = this.props;\r\n    const tasks = column.taskIds.map(taskId => taskMap[taskId]);\r\n    return <Column column={column} tasks={tasks} index={index} />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport initialData from '../initialData';\nimport InnerListFroApp from './InnerListForApp';\nimport '../base.css';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding-top: 3rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nclass App extends Component {\n  state = initialData;\n\n  onDragStart = (start, provided) => {\n    provided.announce(\n      `You have lifted the task in position ${start.source.index + 1}`,\n    );\n  };\n\n  onDragUpdate = (update, provided) => {\n    const message = update.destination\n      ? `You have moved the task to position ${update.source.index + 1}`\n      : 'You are currently noy over a droppable area';\n\n    provided.announce(message);\n  };\n\n  onDragEnd = (result, provided) => {\n    const message = result.destination\n      ? `You have moved the task from position ${result.source.index +\n          1} to ${result.destination.index + 1}`\n      : `The task has been returned to its starting position of ${result.source\n          .index + 1}`;\n\n    provided.announce(message);\n\n    const { destination, source, draggableId, type } = result;\n    const { columns, columnOrder } = this.state;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = [...columnOrder];\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...this.state,\n        columnOrder: newColumnOrder,\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    const start = columns[source.droppableId];\n    const finish = columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskIds = [...start.taskIds];\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      this.setState(newState);\n      return;\n    }\n\n    const startTaskIds = [...start.taskIds];\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = [...finish.taskIds];\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  };\n\n  render() {\n    const { columns, columnOrder, tasks } = this.state;\n    return (\n      <DragDropContext\n        key={'DND-context'}\n        onDragEnd={this.onDragEnd}\n        onDragStart={this.onDragStart}\n        onDragUpdate={this.onDragUpdate}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {columnOrder.map((columnId, index) => {\n                const column = columns[columnId];\n                return (\n                  <InnerListFroApp\n                    key={column.id}\n                    column={column}\n                    taskMap={tasks}\n                    index={index}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}