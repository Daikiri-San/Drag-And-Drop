{"version":3,"sources":["redux/todo/todoActions.js","components/task.jsx","components/InnerList.js","components/column.jsx","components/InnerListForApp.js","components/App.js","redux/todo/todoReducer.js","redux/store.js","index.js"],"names":["makeTodosTasks","createAction","makeTodosColumns","makeTodosColumnOrder","changeTasksOrder","changeColumnOrder","changeTasksColumnDirection","Container","styled","div","props","isDragging","Task","this","task","index","draggableId","id","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","aria-roledescription","content","Component","InnnerList","nextProps","tasks","map","key","Title","h3","TaskList","isDraggingOver","Column","column","title","droppableId","type","droppableProps","placeholder","InnerListFroApp","taskMap","taskIds","taskId","DEFAULT_TASKS","DEFAULT_COLUMNS","DEFAULT_COLUMN_ORDER","App","onDragStart","start","announce","source","onDragUpdate","update","message","destination","onDragEnd","result","columns","columnOrder","newColumnOrder","splice","finish","startTaskIds","newStart","finishTaskIds","newFinish","newTaskIds","newColumn","direction","columnId","mapDispatchToProps","todoActions","connect","todo","createReducer","_","payload","todoReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cff0c635.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst makeTodosTasks = createAction('todo/addTasks');\r\nconst makeTodosColumns = createAction('todo/addColumns');\r\nconst makeTodosColumnOrder = createAction('todo/addColumnOrder');\r\n\r\nconst changeTasksOrder = createAction('todo/changeTaskOrder');\r\nconst changeColumnOrder = createAction('todo/changeColumnOrder');\r\nconst changeTasksColumnDirection = createAction(\r\n  'todo/changeTasksColumnDirection',\r\n);\r\n\r\nexport default {\r\n  makeTodosTasks,\r\n  makeTodosColumns,\r\n  makeTodosColumnOrder,\r\n  changeTasksOrder,\r\n  changeColumnOrder,\r\n  changeTasksColumnDirection,\r\n};\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  border: 0.2rem solid tomato;\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  background-color: ${props => (props.isDragging ? '#b50000' : '#333333')};\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport default class Task extends Component {\r\n  render() {\r\n    const { task, index } = this.props;\r\n    return (\r\n      <Draggable draggableId={task.id} index={index}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            aria-roledescription=\"Press space bar to lift the task\"\r\n          >\r\n            {task.content}\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Task from './task';\r\n\r\nexport default class InnnerList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const { tasks } = this.props;\r\n    if (nextProps.tasks === tasks) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { tasks } = this.props;\r\n    return tasks.map((task, index) => (\r\n      <Task key={task.id} task={task} index={index} />\r\n    ));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport InnerList from './InnerList';\r\n\r\nconst Container = styled.div`\r\n  margin: 1rem;\r\n  border: 0.2rem solid tomato;\r\n  border-radius: 0.5rem;\r\n  background-color: #333333;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  text-align: center;\r\n  font-size: 3rem;\r\n  font-weight: 500;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  background-color: ${props => (props.isDraggingOver ? '#ff0022' : 'inherit')};\r\n  transition: background-color 0.2s ease;\r\n  flex-grow: 1;\r\n  min-width: 28rem;\r\n  min-height: 12rem;\r\n`;\r\n\r\nexport default class Column extends Component {\r\n  render() {\r\n    const { column, tasks, index } = this.props;\r\n    return (\r\n      <Draggable draggableId={column.id} index={index}>\r\n        {({ draggableProps, dragHandleProps, innerRef }) => (\r\n          <Container {...draggableProps} ref={innerRef}>\r\n            <Title {...dragHandleProps}>{column.title}</Title>\r\n            <Droppable droppableId={column.id} type=\"task\">\r\n              {(provided, snapshot) => (\r\n                <TaskList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList tasks={tasks} />\r\n                  {provided.placeholder}\r\n                </TaskList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Column from './column';\r\n\r\nexport default class InnerListFroApp extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    const { column, taskMap, index } = this.props;\r\n    if (\r\n      nextProps.column === column &&\r\n      nextProps.taskMap === taskMap &&\r\n      nextProps.index === index\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  render() {\r\n    const { column, taskMap, index } = this.props;\r\n    const tasks = column.taskIds.map(taskId => taskMap[taskId]);\r\n    return <Column column={column} tasks={tasks} index={index} />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport todoActions from '../redux/todo/todoActions';\nimport InnerListFroApp from './InnerListForApp';\nimport '../base.css';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding-top: 3rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst DEFAULT_TASKS = {\n  'task-1': { id: 'task-1', content: 'Take out the garbage' },\n  'task-2': { id: 'task-2', content: 'Watch my favorite show' },\n  'task-3': { id: 'task-3', content: 'Charge my phone' },\n  'task-4': { id: 'task-4', content: 'Cook dinner' },\n};\n\nconst DEFAULT_COLUMNS = {\n  'column-1': {\n    id: 'column-1',\n    title: 'To do',\n    taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\n  },\n  'column-2': {\n    id: 'column-2',\n    title: 'In progress',\n    taskIds: [],\n  },\n  'column-3': {\n    id: 'column-3',\n    title: 'Done',\n    taskIds: [],\n  },\n};\n\nconst DEFAULT_COLUMN_ORDER = ['column-1', 'column-2', 'column-3'];\n\nclass App extends Component {\n  componentDidMount() {\n    const {\n      makeTodosTasks,\n      makeTodosColumns,\n      makeTodosColumnOrder,\n    } = this.props;\n    makeTodosTasks(DEFAULT_TASKS);\n    makeTodosColumns(DEFAULT_COLUMNS);\n    makeTodosColumnOrder(DEFAULT_COLUMN_ORDER);\n  }\n\n  onDragStart = (start, provided) => {\n    provided.announce(\n      `You have lifted the task in position ${start.source.index + 1}`,\n    );\n  };\n\n  onDragUpdate = (update, provided) => {\n    const message = update.destination\n      ? `You have moved the task to position ${update.source.index + 1}`\n      : 'You are currently noy over a droppable area';\n\n    provided.announce(message);\n  };\n\n  onDragEnd = (result, provided) => {\n    const message = result.destination\n      ? `You have moved the task from position ${result.source.index +\n          1} to ${result.destination.index + 1}`\n      : `The task has been returned to its starting position of ${result.source\n          .index + 1}`;\n\n    provided.announce(message);\n\n    const { destination, source, draggableId, type } = result;\n    const {\n      columns,\n      columnOrder,\n      changeColumnOrder,\n      changeTasksOrder,\n      changeTasksColumnDirection,\n    } = this.props;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = [...columnOrder];\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      changeColumnOrder(newColumnOrder);\n      return;\n    }\n\n    const start = columns[source.droppableId];\n    const finish = columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskIds = [...start.taskIds];\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n\n      const NewAsignColums = {\n        ...columns,\n        [newColumn.id]: newColumn,\n      };\n\n      changeTasksOrder(NewAsignColums);\n      return;\n    }\n\n    const startTaskIds = [...start.taskIds];\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = [...finish.taskIds];\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const NewAsignColums = {\n      ...columns,\n      [newStart.id]: newStart,\n      [newFinish.id]: newFinish,\n    };\n\n    changeTasksColumnDirection(NewAsignColums);\n  };\n\n  render() {\n    const { columns, columnOrder, tasks } = this.props;\n    return (\n      <DragDropContext\n        key={'DND-context'}\n        onDragEnd={this.onDragEnd}\n        onDragStart={this.onDragStart}\n        onDragUpdate={this.onDragUpdate}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {columnOrder.map((columnId, index) => {\n                const column = columns[columnId];\n                return (\n                  <InnerListFroApp\n                    key={column.id}\n                    column={column}\n                    taskMap={tasks}\n                    index={index}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = ({ todo }) => {\n  return {\n    tasks: todo.tasks,\n    columns: todo.columns,\n    columnOrder: todo.columnOrder,\n  };\n};\n\nconst mapDispatchToProps = {\n  makeTodosTasks: todoActions.makeTodosTasks,\n  makeTodosColumns: todoActions.makeTodosColumns,\n  makeTodosColumnOrder: todoActions.makeTodosColumnOrder,\n  changeColumnOrder: todoActions.changeColumnOrder,\n  changeTasksOrder: todoActions.changeTasksOrder,\n  changeTasksColumnDirection: todoActions.changeTasksColumnDirection,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport todoActions from './todoActions';\r\n\r\nconst addTasks = (_, { payload }) => payload;\r\nconst addColumns = (_, { payload }) => payload;\r\nconst addColumnOrder = (_, { payload }) => [...payload];\r\nconst changeColumnOrder = (_, { payload }) => [...payload];\r\nconst changeTasksOrder = (_, { payload }) => payload;\r\nconst changeTasksColumnDirection = (_, { payload }) => payload;\r\n\r\nconst tasks = createReducer(\r\n  {},\r\n  {\r\n    [todoActions.makeTodosTasks]: addTasks,\r\n  },\r\n);\r\n\r\nconst columns = createReducer(\r\n  {},\r\n  {\r\n    [todoActions.makeTodosColumns]: addColumns,\r\n    [todoActions.changeTasksOrder]: changeTasksOrder,\r\n    [todoActions.changeTasksColumnDirection]: changeTasksColumnDirection,\r\n  },\r\n);\r\n\r\nconst columnOrder = createReducer([], {\r\n  [todoActions.makeTodosColumnOrder]: addColumnOrder,\r\n  [todoActions.changeColumnOrder]: changeColumnOrder,\r\n});\r\n\r\nconst todoReducer = combineReducers({\r\n  tasks,\r\n  columns,\r\n  columnOrder,\r\n});\r\n\r\nexport default todoReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todo/todoReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    todo: todoReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}